/*
 * aida
 *
 * 1.0.721-rc.9+f020d61fcb6ef6ebe31e8b3974d429a24c2e10d0
 *
 * The version of the OpenAPI document: 1.0.721-rc.9+f020d61fcb6ef6ebe31e8b3974d429a24c2e10d0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Aida.Sdk.Client;
using Aida.Sdk.Api;
// uncomment below to import models
//using Aida.Sdk.Model;

namespace Aida.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing APrintApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class APrintApiTests : IDisposable
    {
        private APrintApi instance;

        public APrintApiTests()
        {
            instance = new APrintApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of APrintApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' APrintApi
            //Assert.IsType<APrintApi>(instance);
        }

        /// <summary>
        /// Test AidaV1AprintJobCurrentClosePost
        /// </summary>
        [Fact]
        public void AidaV1AprintJobCurrentClosePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AidaV1AprintJobCurrentClosePost();
        }

        /// <summary>
        /// Test AidaV1AprintJobInsertImagePost
        /// </summary>
        [Fact]
        public void AidaV1AprintJobInsertImagePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? dataPageId = null;
            //int? x = null;
            //int? y = null;
            //int? width = null;
            //int? height = null;
            //int? angle = null;
            //FileParameter file = null;
            //instance.AidaV1AprintJobInsertImagePost(dataPageId, x, y, width, height, angle, file);
        }

        /// <summary>
        /// Test AidaV1AprintJobPreviewJpegGet
        /// </summary>
        [Fact]
        public void AidaV1AprintJobPreviewJpegGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AidaV1AprintJobPreviewJpegGet();
        }

        /// <summary>
        /// Test AidaV1AprintPrintDialogClosePost
        /// </summary>
        [Fact]
        public void AidaV1AprintPrintDialogClosePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AidaV1AprintPrintDialogClosePost();
        }

        /// <summary>
        /// Test AidaV1AprintPrintDialogOpenPost
        /// </summary>
        [Fact]
        public void AidaV1AprintPrintDialogOpenPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AidaV1AprintPrintDialogOpenPost();
        }

        /// <summary>
        /// Test AidaV1AprintPrintSettingsGet
        /// </summary>
        [Fact]
        public void AidaV1AprintPrintSettingsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.AidaV1AprintPrintSettingsGet();
            //Assert.IsType<PrintSettingsDto>(response);
        }

        /// <summary>
        /// Test AidaV1AprintPrintSettingsPost
        /// </summary>
        [Fact]
        public void AidaV1AprintPrintSettingsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? printSpeed = null;
            //bool? verticalMirrorEnabled = null;
            //bool? horizontalMirrorEnabled = null;
            //bool? cMYKDirectEnabled = null;
            //bool? enableC = null;
            //bool? enableM = null;
            //bool? enableY = null;
            //bool? enableK = null;
            //int? dropSize = null;
            //int? dataPageId = null;
            //PrintQuality? printQuality = null;
            //instance.AidaV1AprintPrintSettingsPost(printSpeed, verticalMirrorEnabled, horizontalMirrorEnabled, cMYKDirectEnabled, enableC, enableM, enableY, enableK, dropSize, dataPageId, printQuality);
        }

        /// <summary>
        /// Test AidaV1AprintPrintStartPost
        /// </summary>
        [Fact]
        public void AidaV1AprintPrintStartPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AidaV1AprintPrintStartPost();
        }

        /// <summary>
        /// Test AidaV1AprintPrintStatusGet
        /// </summary>
        [Fact]
        public void AidaV1AprintPrintStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.AidaV1AprintPrintStatusGet();
            //Assert.IsType<PrintStatusInfo>(response);
        }

        /// <summary>
        /// Test AidaV1AprintPrintStopPost
        /// </summary>
        [Fact]
        public void AidaV1AprintPrintStopPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AidaV1AprintPrintStopPost();
        }

        /// <summary>
        /// Test AidaV1AprintPrintheadTemperatureGet
        /// </summary>
        [Fact]
        public void AidaV1AprintPrintheadTemperatureGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? toggleDialog = null;
            //var response = instance.AidaV1AprintPrintheadTemperatureGet(toggleDialog);
            //Assert.IsType<float>(response);
        }
    }
}
