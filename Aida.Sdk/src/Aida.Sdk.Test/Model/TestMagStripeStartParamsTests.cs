/*
 * aida
 *
 * 1.0.700.1
 *
 * The version of the OpenAPI document: 1.0.700.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Aida.Sdk.Model;
using Aida.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Aida.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing TestMagStripeStartParams
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TestMagStripeStartParamsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TestMagStripeStartParams
        //private TestMagStripeStartParams instance;

        public TestMagStripeStartParamsTests()
        {
            // TODO uncomment below to create an instance of TestMagStripeStartParams
            //instance = new TestMagStripeStartParams();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TestMagStripeStartParams
        /// </summary>
        [Fact]
        public void TestMagStripeStartParamsInstanceTest()
        {
            // TODO uncomment below to test "IsType" TestMagStripeStartParams
            //Assert.IsType<TestMagStripeStartParams>(instance);
        }

        /// <summary>
        /// Test the property 'Feeder'
        /// </summary>
        [Fact]
        public void FeederTest()
        {
            // TODO unit test for the property 'Feeder'
        }

        /// <summary>
        /// Test the property 'Repetitions'
        /// </summary>
        [Fact]
        public void RepetitionsTest()
        {
            // TODO unit test for the property 'Repetitions'
        }

        /// <summary>
        /// Test the property 'TestType'
        /// </summary>
        [Fact]
        public void TestTypeTest()
        {
            // TODO unit test for the property 'TestType'
        }

        /// <summary>
        /// Test the property 'UseHiCoercivity'
        /// </summary>
        [Fact]
        public void UseHiCoercivityTest()
        {
            // TODO unit test for the property 'UseHiCoercivity'
        }

        /// <summary>
        /// Test the property 'Track1'
        /// </summary>
        [Fact]
        public void Track1Test()
        {
            // TODO unit test for the property 'Track1'
        }

        /// <summary>
        /// Test the property 'Track2'
        /// </summary>
        [Fact]
        public void Track2Test()
        {
            // TODO unit test for the property 'Track2'
        }

        /// <summary>
        /// Test the property 'Track3'
        /// </summary>
        [Fact]
        public void Track3Test()
        {
            // TODO unit test for the property 'Track3'
        }
    }
}
