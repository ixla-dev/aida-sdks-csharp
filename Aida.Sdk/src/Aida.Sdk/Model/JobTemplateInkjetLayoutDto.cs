/*
 * aida
 *
 * 1.0.721-rc.9+f020d61fcb6ef6ebe31e8b3974d429a24c2e10d0
 *
 * The version of the OpenAPI document: 1.0.721-rc.9+f020d61fcb6ef6ebe31e8b3974d429a24c2e10d0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Aida.Sdk.Client.FileParameter;
using OpenAPIDateConverter = Aida.Sdk.Client.OpenAPIDateConverter;

namespace Aida.Sdk.Model
{
    /// <summary>
    /// JobTemplateInkjetLayoutDto
    /// </summary>
    [DataContract(Name = "JobTemplateInkjetLayoutDto")]
    public partial class JobTemplateInkjetLayoutDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JobTemplateInkjetLayoutDto" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="layout">layout.</param>
        /// <param name="index">index.</param>
        /// <param name="layoutId">layoutId.</param>
        /// <param name="jobTemplateId">jobTemplateId.</param>
        /// <param name="supportSide">supportSide.</param>
        /// <param name="autoPosSettings">autoPosSettings.</param>
        /// <param name="printSettings">printSettings.</param>
        /// <param name="pinningSettings">pinningSettings.</param>
        /// <param name="curingSettings">curingSettings.</param>
        public JobTemplateInkjetLayoutDto(int id = default(int), InkjetLayoutDto layout = default(InkjetLayoutDto), int index = default(int), int layoutId = default(int), int jobTemplateId = default(int), string supportSide = default(string), List<JobTemplateInkjetLayoutAutoPosSettingsDto> autoPosSettings = default(List<JobTemplateInkjetLayoutAutoPosSettingsDto>), PrintSettingsDto printSettings = default(PrintSettingsDto), PinningSettingsDto pinningSettings = default(PinningSettingsDto), CuringSettingsDto curingSettings = default(CuringSettingsDto))
        {
            this.Id = id;
            this.Layout = layout;
            this.Index = index;
            this.LayoutId = layoutId;
            this.JobTemplateId = jobTemplateId;
            this.SupportSide = supportSide;
            this.AutoPosSettings = autoPosSettings;
            this.PrintSettings = printSettings;
            this.PinningSettings = pinningSettings;
            this.CuringSettings = curingSettings;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Layout
        /// </summary>
        [DataMember(Name = "layout", EmitDefaultValue = false)]
        public InkjetLayoutDto Layout { get; set; }

        /// <summary>
        /// Gets or Sets Index
        /// </summary>
        [DataMember(Name = "index", EmitDefaultValue = false)]
        public int Index { get; set; }

        /// <summary>
        /// Gets or Sets LayoutId
        /// </summary>
        [DataMember(Name = "layoutId", EmitDefaultValue = false)]
        public int LayoutId { get; set; }

        /// <summary>
        /// Gets or Sets JobTemplateId
        /// </summary>
        [DataMember(Name = "jobTemplateId", EmitDefaultValue = false)]
        public int JobTemplateId { get; set; }

        /// <summary>
        /// Gets or Sets SupportSide
        /// </summary>
        [DataMember(Name = "supportSide", EmitDefaultValue = true)]
        public string SupportSide { get; set; }

        /// <summary>
        /// Gets or Sets AutoPosSettings
        /// </summary>
        [DataMember(Name = "autoPosSettings", EmitDefaultValue = true)]
        public List<JobTemplateInkjetLayoutAutoPosSettingsDto> AutoPosSettings { get; set; }

        /// <summary>
        /// Gets or Sets PrintSettings
        /// </summary>
        [DataMember(Name = "printSettings", EmitDefaultValue = false)]
        public PrintSettingsDto PrintSettings { get; set; }

        /// <summary>
        /// Gets or Sets PinningSettings
        /// </summary>
        [DataMember(Name = "pinningSettings", EmitDefaultValue = false)]
        public PinningSettingsDto PinningSettings { get; set; }

        /// <summary>
        /// Gets or Sets CuringSettings
        /// </summary>
        [DataMember(Name = "curingSettings", EmitDefaultValue = false)]
        public CuringSettingsDto CuringSettings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class JobTemplateInkjetLayoutDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Layout: ").Append(Layout).Append("\n");
            sb.Append("  Index: ").Append(Index).Append("\n");
            sb.Append("  LayoutId: ").Append(LayoutId).Append("\n");
            sb.Append("  JobTemplateId: ").Append(JobTemplateId).Append("\n");
            sb.Append("  SupportSide: ").Append(SupportSide).Append("\n");
            sb.Append("  AutoPosSettings: ").Append(AutoPosSettings).Append("\n");
            sb.Append("  PrintSettings: ").Append(PrintSettings).Append("\n");
            sb.Append("  PinningSettings: ").Append(PinningSettings).Append("\n");
            sb.Append("  CuringSettings: ").Append(CuringSettings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
