/*
 * aida
 *
 * 1.0.704.0
 *
 * The version of the OpenAPI document: 1.0.704.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Aida.Sdk.Client.FileParameter;
using OpenAPIDateConverter = Aida.Sdk.Client.OpenAPIDateConverter;

namespace Aida.Sdk.Model
{
    /// <summary>
    /// Defines PrintCycleModes
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum PrintCycleModes
    {
        /// <summary>
        /// Enum PrintAndLaser for value: PrintAndLaser
        /// </summary>
        [EnumMember(Value = "PrintAndLaser")]
        PrintAndLaser = 1,

        /// <summary>
        /// Enum PrintAndEject for value: PrintAndEject
        /// </summary>
        [EnumMember(Value = "PrintAndEject")]
        PrintAndEject = 2,

        /// <summary>
        /// Enum PrintAndCuring for value: PrintAndCuring
        /// </summary>
        [EnumMember(Value = "PrintAndCuring")]
        PrintAndCuring = 3,

        /// <summary>
        /// Enum Reprint for value: Reprint
        /// </summary>
        [EnumMember(Value = "Reprint")]
        Reprint = 4,

        /// <summary>
        /// Enum ReprintAndCuring for value: ReprintAndCuring
        /// </summary>
        [EnumMember(Value = "ReprintAndCuring")]
        ReprintAndCuring = 5,

        /// <summary>
        /// Enum Curing for value: Curing
        /// </summary>
        [EnumMember(Value = "Curing")]
        Curing = 6,

        /// <summary>
        /// Enum CuringAndExit for value: CuringAndExit
        /// </summary>
        [EnumMember(Value = "CuringAndExit")]
        CuringAndExit = 7,

        /// <summary>
        /// Enum CuringAndLaser for value: CuringAndLaser
        /// </summary>
        [EnumMember(Value = "CuringAndLaser")]
        CuringAndLaser = 8
    }

}
