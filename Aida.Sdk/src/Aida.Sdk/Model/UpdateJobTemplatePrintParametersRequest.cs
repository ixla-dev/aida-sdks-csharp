/*
 * aida
 *
 * 1.0.713
 *
 * The version of the OpenAPI document: 1.0.713
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Aida.Sdk.Client.FileParameter;
using OpenAPIDateConverter = Aida.Sdk.Client.OpenAPIDateConverter;

namespace Aida.Sdk.Model
{
    /// <summary>
    /// UpdateJobTemplatePrintParametersRequest
    /// </summary>
    [DataContract(Name = "UpdateJobTemplatePrintParametersRequest")]
    public partial class UpdateJobTemplatePrintParametersRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateJobTemplatePrintParametersRequest" /> class.
        /// </summary>
        /// <param name="jobTemplateInkjetLayoutId">jobTemplateInkjetLayoutId.</param>
        /// <param name="pinningSettings">pinningSettings.</param>
        /// <param name="printSettingsDto">printSettingsDto.</param>
        /// <param name="curingSettingsDto">curingSettingsDto.</param>
        public UpdateJobTemplatePrintParametersRequest(int jobTemplateInkjetLayoutId = default(int), PinningSettingsDto pinningSettings = default(PinningSettingsDto), PrintSettingsDto printSettingsDto = default(PrintSettingsDto), CuringSettingsDto curingSettingsDto = default(CuringSettingsDto))
        {
            this.JobTemplateInkjetLayoutId = jobTemplateInkjetLayoutId;
            this.PinningSettings = pinningSettings;
            this.PrintSettingsDto = printSettingsDto;
            this.CuringSettingsDto = curingSettingsDto;
        }

        /// <summary>
        /// Gets or Sets JobTemplateInkjetLayoutId
        /// </summary>
        [DataMember(Name = "jobTemplateInkjetLayoutId", EmitDefaultValue = false)]
        public int JobTemplateInkjetLayoutId { get; set; }

        /// <summary>
        /// Gets or Sets PinningSettings
        /// </summary>
        [DataMember(Name = "pinningSettings", EmitDefaultValue = false)]
        public PinningSettingsDto PinningSettings { get; set; }

        /// <summary>
        /// Gets or Sets PrintSettingsDto
        /// </summary>
        [DataMember(Name = "printSettingsDto", EmitDefaultValue = false)]
        public PrintSettingsDto PrintSettingsDto { get; set; }

        /// <summary>
        /// Gets or Sets CuringSettingsDto
        /// </summary>
        [DataMember(Name = "curingSettingsDto", EmitDefaultValue = false)]
        public CuringSettingsDto CuringSettingsDto { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateJobTemplatePrintParametersRequest {\n");
            sb.Append("  JobTemplateInkjetLayoutId: ").Append(JobTemplateInkjetLayoutId).Append("\n");
            sb.Append("  PinningSettings: ").Append(PinningSettings).Append("\n");
            sb.Append("  PrintSettingsDto: ").Append(PrintSettingsDto).Append("\n");
            sb.Append("  CuringSettingsDto: ").Append(CuringSettingsDto).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
