/*
 * aida
 *
 * 1.0.703.4
 *
 * The version of the OpenAPI document: 1.0.703.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Aida.Sdk.Client.FileParameter;
using OpenAPIDateConverter = Aida.Sdk.Client.OpenAPIDateConverter;

namespace Aida.Sdk.Model
{
    /// <summary>
    /// Defines GenericCycleTypes
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum GenericCycleTypes
    {
        /// <summary>
        /// Enum EngraveAndPrint for value: EngraveAndPrint
        /// </summary>
        [EnumMember(Value = "EngraveAndPrint")]
        EngraveAndPrint = 1,

        /// <summary>
        /// Enum PrintAndEngrave for value: PrintAndEngrave
        /// </summary>
        [EnumMember(Value = "PrintAndEngrave")]
        PrintAndEngrave = 2,

        /// <summary>
        /// Enum PrintAndExit for value: PrintAndExit
        /// </summary>
        [EnumMember(Value = "PrintAndExit")]
        PrintAndExit = 3,

        /// <summary>
        /// Enum PrintAndCuring for value: PrintAndCuring
        /// </summary>
        [EnumMember(Value = "PrintAndCuring")]
        PrintAndCuring = 4,

        /// <summary>
        /// Enum ReprintAndCuring for value: ReprintAndCuring
        /// </summary>
        [EnumMember(Value = "ReprintAndCuring")]
        ReprintAndCuring = 5,

        /// <summary>
        /// Enum Curing for value: Curing
        /// </summary>
        [EnumMember(Value = "Curing")]
        Curing = 6,

        /// <summary>
        /// Enum CuringAndExit for value: CuringAndExit
        /// </summary>
        [EnumMember(Value = "CuringAndExit")]
        CuringAndExit = 7,

        /// <summary>
        /// Enum CuringAndLaser for value: CuringAndLaser
        /// </summary>
        [EnumMember(Value = "CuringAndLaser")]
        CuringAndLaser = 8,

        /// <summary>
        /// Enum Reprint for value: Reprint
        /// </summary>
        [EnumMember(Value = "Reprint")]
        Reprint = 9,

        /// <summary>
        /// Enum Clean for value: Clean
        /// </summary>
        [EnumMember(Value = "Clean")]
        Clean = 10,

        /// <summary>
        /// Enum Wiper for value: Wiper
        /// </summary>
        [EnumMember(Value = "Wiper")]
        Wiper = 11,

        /// <summary>
        /// Enum NormalPurge for value: NormalPurge
        /// </summary>
        [EnumMember(Value = "NormalPurge")]
        NormalPurge = 12,

        /// <summary>
        /// Enum StrongPurge for value: StrongPurge
        /// </summary>
        [EnumMember(Value = "StrongPurge")]
        StrongPurge = 13,

        /// <summary>
        /// Enum StartSpitting for value: StartSpitting
        /// </summary>
        [EnumMember(Value = "StartSpitting")]
        StartSpitting = 14,

        /// <summary>
        /// Enum StopSpitting for value: StopSpitting
        /// </summary>
        [EnumMember(Value = "StopSpitting")]
        StopSpitting = 15,

        /// <summary>
        /// Enum StartInkPriming for value: StartInkPriming
        /// </summary>
        [EnumMember(Value = "StartInkPriming")]
        StartInkPriming = 16,

        /// <summary>
        /// Enum StopInkPriming for value: StopInkPriming
        /// </summary>
        [EnumMember(Value = "StopInkPriming")]
        StopInkPriming = 17,

        /// <summary>
        /// Enum HeadPark for value: HeadPark
        /// </summary>
        [EnumMember(Value = "HeadPark")]
        HeadPark = 18
    }

}
